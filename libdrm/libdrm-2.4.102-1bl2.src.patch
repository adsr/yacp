--- origsrc/libdrm-2.4.102/etnaviv/etnaviv_device.c	2020-05-27 05:37:16.000000000 +0900
+++ src/libdrm-2.4.102/etnaviv/etnaviv_device.c	2020-09-25 18:33:34.348463500 +0900
@@ -25,8 +25,10 @@
  */
 
 #include <stdlib.h>
+#if defined(__linux__)
 #include <linux/stddef.h>
 #include <linux/types.h>
+#endif
 #include <errno.h>
 #include <sys/mman.h>
 #include <fcntl.h>
--- origsrc/libdrm-2.4.102/exynos/exynos_drm.c	2020-05-27 05:37:16.000000000 +0900
+++ src/libdrm-2.4.102/exynos/exynos_drm.c	2020-09-25 18:33:34.365495700 +0900
@@ -31,7 +31,9 @@
 #include <unistd.h>
 
 #include <sys/mman.h>
+#if defined(__linux__)
 #include <linux/stddef.h>
+#endif
 
 #include <xf86drm.h>
 
--- origsrc/libdrm-2.4.102/exynos/exynos_fimg2d.c	2020-05-27 05:37:16.000000000 +0900
+++ src/libdrm-2.4.102/exynos/exynos_fimg2d.c	2020-09-25 18:33:34.401474400 +0900
@@ -30,7 +30,9 @@
 #include <assert.h>
 
 #include <sys/mman.h>
+#if defined(__linux__)
 #include <linux/stddef.h>
+#endif
 
 #include <xf86drm.h>
 
--- origsrc/libdrm-2.4.102/freedreno/kgsl/kgsl_bo.c	2020-05-27 05:37:16.000000000 +0900
+++ src/libdrm-2.4.102/freedreno/kgsl/kgsl_bo.c	2020-09-25 18:33:34.426448100 +0900
@@ -28,7 +28,9 @@
 
 #include "kgsl_priv.h"
 
+#if defined(__linux__)
 #include <linux/fb.h>
+#endif
 
 static int set_memtype(struct fd_device *dev, uint32_t handle, uint32_t flags)
 {
--- origsrc/libdrm-2.4.102/include/drm/drm.h	2020-05-27 05:37:16.000000000 +0900
+++ src/libdrm-2.4.102/include/drm/drm.h	2020-09-25 18:33:34.434458100 +0900
@@ -45,7 +45,11 @@ typedef unsigned int drm_handle_t;
 #else /* One of the BSDs */
 
 #include <stdint.h>
+#if defined(__CYGWIN__)
+#include <sys/ioctl.h>
+#else
 #include <sys/ioccom.h>
+#endif
 #include <sys/types.h>
 typedef int8_t   __s8;
 typedef uint8_t  __u8;
--- origsrc/libdrm-2.4.102/libkms/vmwgfx.c	2020-05-27 05:37:16.000000000 +0900
+++ src/libdrm-2.4.102/libkms/vmwgfx.c	2020-09-25 18:33:34.476460900 +0900
@@ -97,11 +97,15 @@ vmwgfx_bo_create(struct kms_driver *kms,
 		bo->base.pitch = width * 4;
 		bo->base.kms = kms;
 
+#if defined(ERESTART)
 		do {
+#endif
 			ret = drmCommandWriteRead(bo->base.kms->fd,
 						  DRM_VMW_ALLOC_DMABUF,
 						  &arg, sizeof(arg));
+#if defined(ERESTART)
 		} while (ret == -ERESTART);
+#endif
 
 		if (ret)
 			goto err_free;
--- origsrc/libdrm-2.4.102/omap/omap_drm.c	2020-05-27 05:37:16.000000000 +0900
+++ src/libdrm-2.4.102/omap/omap_drm.c	2020-09-25 18:33:34.505466300 +0900
@@ -27,8 +27,10 @@
  */
 
 #include <stdlib.h>
+#if defined(__linux__)
 #include <linux/stddef.h>
 #include <linux/types.h>
+#endif
 #include <errno.h>
 #include <sys/mman.h>
 #include <fcntl.h>
--- origsrc/libdrm-2.4.102/tests/exynos/exynos_fimg2d_test.c	2020-05-27 05:37:16.000000000 +0900
+++ src/libdrm-2.4.102/tests/exynos/exynos_fimg2d_test.c	2020-09-25 18:33:34.543450800 +0900
@@ -31,7 +31,9 @@
 #include <unistd.h>
 
 #include <sys/mman.h>
+#if defined(__linux__)
 #include <linux/stddef.h>
+#endif
 
 #include <xf86drm.h>
 #include <xf86drmMode.h>
--- origsrc/libdrm-2.4.102/tests/meson.build	2020-05-27 05:37:16.000000000 +0900
+++ src/libdrm-2.4.102/tests/meson.build	2020-09-25 18:33:34.573477000 +0900
@@ -44,7 +44,7 @@ endif
 if with_etnaviv
   subdir('etnaviv')
 endif
-if with_nouveau
+if with_nouveau and host_machine.system() != 'cygwin'
   subdir('nouveau')
 endif
 
--- origsrc/libdrm-2.4.102/xf86drm.c	2020-05-27 05:37:16.000000000 +0900
+++ src/libdrm-2.4.102/xf86drm.c	2020-09-25 18:33:34.594486700 +0900
@@ -2822,7 +2822,7 @@ static bool drmNodeIsDRM(int maj, int mi
     snprintf(path, sizeof(path), "/sys/dev/char/%d:%d/device/drm",
              maj, min);
     return stat(path, &sbuf) == 0;
-#elif __FreeBSD__
+#elif defined(__FreeBSD__)
     char name[SPECNAMELEN];
 
     if (!devname_r(makedev(maj, min), S_IFCHR, name, sizeof(name)))
@@ -2935,7 +2935,7 @@ static char *drmGetMinorNameForFD(int fd
 
     closedir(sysdir);
     return NULL;
-#elif __FreeBSD__
+#elif defined(__FreeBSD__)
     struct stat sbuf;
     char dname[SPECNAMELEN];
     const char *mname;
@@ -3255,7 +3255,7 @@ static int drmParsePciBusInfo(int maj, i
     info->func = pinfo.func;
 
     return 0;
-#elif __FreeBSD__
+#elif defined(__FreeBSD__)
     return get_sysctl_pci_bus_info(maj, min, info);
 #else
 #warning "Missing implementation of drmParsePciBusInfo"
@@ -3424,7 +3424,7 @@ static int drmParsePciDeviceInfo(int maj
     device->subdevice_id = pinfo.subdevice_id;
 
     return 0;
-#elif __FreeBSD__
+#elif defined(__FreeBSD__)
     drmPciBusInfo info;
     struct pci_conf_io pc;
     struct pci_match_conf patterns[1];
@@ -4302,7 +4302,7 @@ drm_public char *drmGetDeviceNameFromFd2
     free(value);
 
     return strdup(path);
-#elif __FreeBSD__
+#elif defined(__FreeBSD__)
     return drmGetDeviceNameFromFd(fd);
 #else
     struct stat      sbuf;
--- origsrc/libdrm-2.4.102/xf86drm.h	2020-05-27 05:37:16.000000000 +0900
+++ src/libdrm-2.4.102/xf86drm.h	2020-09-25 18:33:34.660484600 +0900
@@ -47,7 +47,7 @@ extern "C" {
 #define DRM_MAX_MINOR   16
 #endif
 
-#if defined(__linux__)
+#if defined(__linux__) || defined(__CYGWIN__)
 
 #define DRM_IOCTL_NR(n)		_IOC_NR(n)
 #define DRM_IOC_VOID		_IOC_NONE
