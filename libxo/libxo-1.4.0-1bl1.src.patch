--- origsrc/libxo-1.4.0/configure.ac	2020-01-24 07:46:09.000000000 +0900
+++ src/libxo-1.4.0/configure.ac	2020-07-19 00:34:23.810587400 +0900
@@ -75,6 +75,9 @@ AC_CHECK_HEADERS([sys/sysctl.h])
 AC_CHECK_HEADERS([threads.h])
 AC_CHECK_HEADERS([monitor.h])
 
+PKG_CHECK_MODULES([LIBBSD], [libbsd], [have_bsd=yes], [have_bsd=no])
+AC_DEFINE([HAVE_LIBBSD], [1], [libbsd])
+
 dnl humanize_number(3) is a great function, but it's not standard.
 dnl Note Macosx has the function in libutil.a but doesn't ship the
 dnl header file, so I'll need to carry my own implementation.  See:
--- origsrc/libxo-1.4.0/libxo/Makefile.am	2019-04-02 22:59:31.000000000 +0900
+++ src/libxo-1.4.0/libxo/Makefile.am	2020-07-19 00:34:23.841837100 +0900
@@ -44,6 +44,9 @@ libxo_la_SOURCES = \
     xo_encoder.c \
     xo_syslog.c
 
+libxo_la_LDFLAGS = -no-undefined
+libxo_la_LIBADD = $(LIBBSD_LIBS)
+
 man3_files = \
     libxo.3 \
     xo_attr.3 \
--- origsrc/libxo-1.4.0/libxo/libxo.c	2020-01-24 07:45:49.000000000 +0900
+++ src/libxo-1.4.0/libxo/libxo.c	2020-07-19 00:34:23.857458900 +0900
@@ -43,6 +43,10 @@
 #include <wctype.h>
 #include <getopt.h>
 
+#if defined(__CYGWIN__)
+typedef int64_t quad_t;
+#endif
+
 #include "xo_config.h"
 #include "xo.h"
 #include "xo_encoder.h"
--- origsrc/libxo-1.4.0/libxo/xo_syslog.c	2017-06-03 22:07:19.000000000 +0900
+++ src/libxo-1.4.0/libxo/xo_syslog.c	2020-07-19 00:34:23.888721800 +0900
@@ -58,7 +58,9 @@
 #include <stdarg.h>
 #include <sys/time.h>
 #include <sys/types.h>
+#if !defined(__CYGWIN__)
 #include <sys/sysctl.h>
+#endif
 
 #include "xo_config.h"
 #include "xo.h"
@@ -259,6 +261,10 @@ xo_send_syslog (char *full_msg, char *v0
     flags |= O_CLOEXEC;
 #endif /* O_CLOEXEC */
 
+#if !defined(_PATH_CONSOLE)
+#define _PATH_CONSOLE "/dev/console"
+#endif
+
     if (xo_logstat & LOG_CONS
         && (fd = open(_PATH_CONSOLE, flags, 0)) >= 0) {
         struct iovec iov[2];
