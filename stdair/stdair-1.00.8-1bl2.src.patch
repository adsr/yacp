--- origsrc/stdair-stdair-1.00.8/config/project_config_embeddable.cmake	2019-07-11 23:27:30.000000000 +0900
+++ src/stdair-stdair-1.00.8/config/project_config_embeddable.cmake	2020-01-04 08:38:42.081346500 +0900
@@ -1507,7 +1507,11 @@ endmacro (module_set_name)
 macro (add_modules)
   set (_embedded_components ${ARGV})
   set (LIB_DEPENDENCY_EXPORT ${PROJECT_NAME}-library-depends)
+  if (CYGWIN)
+    set (LIB_DEPENDENCY_EXPORT_PATH "${INSTALL_LIB_DIR}/cmake/${PROJECT_NAME}")
+  else()
   set (LIB_DEPENDENCY_EXPORT_PATH "${INSTALL_DATA_DIR}/${PROJECT_NAME}/CMake")
+  endif()
   #
   foreach (_embedded_comp ${_embedded_components})
     #
@@ -1798,7 +1802,8 @@ macro (module_library_add_specific
 	# Install the library in the standard location
 	install (TARGETS ${_lib_target}
       EXPORT ${LIB_DEPENDENCY_EXPORT}
-      LIBRARY DESTINATION "${INSTALL_LIB_DIR}" COMPONENT runtime)
+      RUNTIME DESTINATION "${INSTALL_BIN_DIR}"
+      ARCHIVE DESTINATION "${INSTALL_LIB_DIR}")
   endif ("${_lib_prefix}" STREQUAL "py")
   
   # Register, for reporting purpose, the list of libraries to be built
@@ -1994,8 +1999,13 @@ endmacro (module_script_add)
 # Installation of the CMake import helper, so that third party projects
 # can refer to it (for libraries, header files and binaries)
 macro (module_export_install)
+  if (CYGWIN)
+  install (EXPORT ${LIB_DEPENDENCY_EXPORT}
+    DESTINATION "${INSTALL_LIB_DIR}/cmake" COMPONENT devel)
+  else()
   install (EXPORT ${LIB_DEPENDENCY_EXPORT}
     DESTINATION "${INSTALL_DATA_DIR}/${PACKAGE}/CMake" COMPONENT devel)
+  endif()
 endmacro (module_export_install)
 
 
--- origsrc/stdair-stdair-1.00.8/stdair-config.cmake.in	2019-07-11 23:27:30.000000000 +0900
+++ src/stdair-stdair-1.00.8/stdair-config.cmake.in	2020-01-04 08:38:42.112600800 +0900
@@ -19,5 +19,5 @@ set (STDAIR_SAMPLE_DIR "@STDAIR_SAMPLE_D
 include ("@STDAIR_CMAKE_DIR@/stdair-library-depends.cmake")
 
 # These are IMPORTED targets created by stdair-library-depends.cmake
-set (STDAIR_LIBRARIES stdairlib stdairuicllib)
+set (STDAIR_LIBRARIES stdair stdairuicl)
 set (STDAIR_EXECUTABLES stdair)
