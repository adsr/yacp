--- origsrc/solidity-0.6.1/CMakeLists.txt	2020-01-03 08:35:39.000000000 +0900
+++ src/solidity-0.6.1/CMakeLists.txt	2020-01-04 13:52:52.576048000 +0900
@@ -29,7 +29,11 @@ include(EthCcache)
 
 # Let's find our dependencies
 include(EthDependencies)
-include(jsoncpp)
+find_package(PkgConfig)
+pkg_check_modules(JSONCPP jsoncpp)
+if (NOT JSONCPP_FOUND)
+	include(jsoncpp)
+endif()
 include_directories(SYSTEM ${JSONCPP_INCLUDE_DIR})
 
 find_package(Threads)
--- origsrc/solidity-0.6.1/commit_hash.txt	1970-01-01 09:00:00.000000000 +0900
+++ src/solidity-0.6.1/commit_hash.txt	2020-01-04 13:53:35.397189300 +0900
@@ -0,0 +1 @@
+e6f7d5a4
--- origsrc/solidity-0.6.1/libdevcore/JSON.cpp	2020-01-03 08:35:39.000000000 +0900
+++ src/solidity-0.6.1/libdevcore/JSON.cpp	2020-01-04 14:03:46.554235500 +0900
@@ -31,10 +31,12 @@
 
 using namespace std;
 
+#if !defined(__CYGWIN__)
 static_assert(
 	(JSONCPP_VERSION_MAJOR == 1) && (JSONCPP_VERSION_MINOR == 9) && (JSONCPP_VERSION_PATCH == 2),
 	"Unexpected jsoncpp version: " JSONCPP_VERSION_STRING ". Expecting 1.9.2."
 );
+#endif
 
 namespace dev
 {
--- origsrc/solidity-0.6.1/libyul/optimiser/BlockHasher.cpp	2020-01-03 08:35:39.000000000 +0900
+++ src/solidity-0.6.1/libyul/optimiser/BlockHasher.cpp	2020-01-04 13:52:52.591675800 +0900
@@ -27,6 +27,10 @@ using namespace std;
 using namespace dev;
 using namespace yul;
 
+#if defined(_N)
+#undef _N
+#endif
+
 namespace
 {
 static constexpr uint64_t compileTimeLiteralHash(char const* _literal, size_t _N)
