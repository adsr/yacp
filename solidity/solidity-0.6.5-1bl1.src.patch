--- origsrc/solidity-0.6.5/CMakeLists.txt	2020-04-06 22:03:00.000000000 +0900
+++ src/solidity-0.6.5/CMakeLists.txt	2020-04-08 09:58:46.762551200 +0900
@@ -28,7 +28,11 @@ include(EthCcache)
 
 # Let's find our dependencies
 include(EthDependencies)
-include(jsoncpp)
+find_package(PkgConfig)
+pkg_check_modules(JSONCPP jsoncpp)
+if (NOT JSONCPP_FOUND)
+	include(jsoncpp)
+endif()
 include_directories(SYSTEM ${JSONCPP_INCLUDE_DIR})
 
 find_package(Threads)
--- origsrc/solidity-0.6.5/commit_hash.txt	1970-01-01 09:00:00.000000000 +0900
+++ src/solidity-0.6.5/commit_hash.txt	2020-04-08 09:58:46.762551200 +0900
@@ -0,0 +1 @@
+1dca32f3
--- origsrc/solidity-0.6.5/libsolutil/JSON.cpp	2020-04-06 22:03:00.000000000 +0900
+++ src/solidity-0.6.5/libsolutil/JSON.cpp	2020-04-08 09:58:46.778181700 +0900
@@ -31,10 +31,12 @@
 
 using namespace std;
 
+#if !defined(__CYGWIN__)
 static_assert(
 	(JSONCPP_VERSION_MAJOR == 1) && (JSONCPP_VERSION_MINOR == 9) && (JSONCPP_VERSION_PATCH == 2),
 	"Unexpected jsoncpp version: " JSONCPP_VERSION_STRING ". Expecting 1.9.2."
 );
+#endif
 
 namespace solidity::util
 {
--- origsrc/solidity-0.6.5/libyul/optimiser/BlockHasher.cpp	2020-04-06 22:03:00.000000000 +0900
+++ src/solidity-0.6.5/libyul/optimiser/BlockHasher.cpp	2020-04-08 09:58:46.793809200 +0900
@@ -28,6 +28,10 @@ using namespace solidity;
 using namespace solidity::yul;
 using namespace solidity::util;
 
+#if defined(_N)
+#undef _N
+#endif
+
 namespace
 {
 static constexpr uint64_t compileTimeLiteralHash(char const* _literal, size_t _n)
