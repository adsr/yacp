--- origsrc/SQLiteCpp-2.5.0/CMakeLists.txt	2020-01-01 05:33:49.000000000 +0900
+++ src/SQLiteCpp-2.5.0/CMakeLists.txt	2020-01-04 16:30:02.080860600 +0900
@@ -194,7 +194,7 @@ if (SQLITE_USE_LEGACY_STRUCT)
     target_compile_definitions(SQLiteCpp PUBLIC SQLITE_USE_LEGACY_STRUCT)
 endif (SQLITE_USE_LEGACY_STRUCT)
 
-if (UNIX AND (CMAKE_COMPILER_IS_GNUCXX OR ${CMAKE_CXX_COMPILER_ID} STREQUAL "Clang"))
+if (UNIX AND (CMAKE_COMPILER_IS_GNUCXX OR ${CMAKE_CXX_COMPILER_ID} STREQUAL "Clang") AND NOT CYGWIN)
     set_target_properties(SQLiteCpp PROPERTIES COMPILE_FLAGS "-fPIC")
 endif (UNIX AND (CMAKE_COMPILER_IS_GNUCXX OR ${CMAKE_CXX_COMPILER_ID} STREQUAL "Clang"))
 
@@ -202,6 +202,7 @@ endif (UNIX AND (CMAKE_COMPILER_IS_GNUCX
 include(GNUInstallDirs)
 install(TARGETS SQLiteCpp
     EXPORT ${PROJECT_NAME}Targets
+    RUNTIME DESTINATION ${CMAKE_INSTALL_BINDIR}
     LIBRARY DESTINATION ${CMAKE_INSTALL_LIBDIR}
     ARCHIVE DESTINATION ${CMAKE_INSTALL_LIBDIR}
     COMPONENT libraries)
@@ -210,6 +211,9 @@ target_include_directories(SQLiteCpp PUB
   $<INSTALL_INTERFACE:include/>)
 install(DIRECTORY include/ DESTINATION ${CMAKE_INSTALL_INCLUDEDIR} COMPONENT headers FILES_MATCHING REGEX ".*\\.(hpp|h)$")
 install(EXPORT ${PROJECT_NAME}Targets DESTINATION ${CMAKE_INSTALL_LIBDIR}/cmake/${PROJECT_NAME})
+if (CYGWIN)
+    install(FILES cmake/FindSQLiteCpp.cmake DESTINATION ${CMAKE_INSTALL_LIBDIR}/cmake/${PROJECT_NAME})
+endif ()
 
 include(CMakePackageConfigHelpers)
 write_basic_package_version_file(
@@ -248,8 +252,8 @@ if (SQLITECPP_INTERNAL_SQLITE)
 else (SQLITECPP_INTERNAL_SQLITE)
     find_package (SQLite3 REQUIRED)
     if (SQLITE3_FOUND)
-        include_directories(${SQLITE3_INCLUDE_DIRS})
-        target_link_libraries (SQLiteCpp ${SQLITE3_LIBRARIES})
+        include_directories(${SQLite3_INCLUDE_DIRS})
+        target_link_libraries (SQLiteCpp ${SQLite3_LIBRARY})
     endif (SQLITE3_FOUND)
 endif (SQLITECPP_INTERNAL_SQLITE)
 
@@ -375,3 +379,10 @@ endif (SQLITECPP_BUILD_TESTS)
 
 # API version for SQLiteCpp shared library.
 set_property(TARGET SQLiteCpp PROPERTY SOVERSION 0)
+
+SET(prefix ${CMAKE_INSTALL_PREFIX})
+SET(exec_prefix ${CMAKE_INSTALL_PREFIX})
+SET(libdir ${CMAKE_INSTALL_PREFIX}/lib)
+SET(includedir ${CMAKE_INSTALL_PREFIX}/include)
+CONFIGURE_FILE(${CMAKE_SOURCE_DIR}/SQLiteCpp.pc.in ${CMAKE_BINARY_DIR}/SQLiteCpp.pc @ONLY)
+INSTALL(FILES ${CMAKE_BINARY_DIR}/SQLiteCpp.pc DESTINATION ${CMAKE_INSTALL_PREFIX}/lib/pkgconfig)
--- origsrc/SQLiteCpp-2.5.0/SQLiteCpp.pc.in	1970-01-01 09:00:00.000000000 +0900
+++ src/SQLiteCpp-2.5.0/SQLiteCpp.pc.in	2020-01-04 16:04:35.356620400 +0900
@@ -0,0 +1,10 @@
+prefix=@prefix@
+exec_prefix=@exec_prefix@
+libdir=@libdir@
+includedir=@includedir@
+
+Name: SQLiteCpp
+Description: Smart and easy to use C++ SQLite3 wrapper
+Version: @PROJECT_VERSION@
+Libs: -L${libdir} -lSQLiteCpp
+Cflags: -I${includedir}
