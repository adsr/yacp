--- origsrc/SQLiteCpp-3.1.0/CMakeLists.txt	2020-08-12 00:05:57.000000000 +0900
+++ src/SQLiteCpp-3.1.0/CMakeLists.txt	2020-08-13 15:19:22.924785700 +0900
@@ -262,11 +262,13 @@ target_include_directories(SQLiteCpp
 include(GNUInstallDirs)
 install(TARGETS SQLiteCpp
     EXPORT ${PROJECT_NAME}Targets
+    RUNTIME DESTINATION ${CMAKE_INSTALL_BINDIR}
     LIBRARY DESTINATION ${CMAKE_INSTALL_LIBDIR}
     ARCHIVE DESTINATION ${CMAKE_INSTALL_LIBDIR}
     COMPONENT libraries)
 install(DIRECTORY include/ DESTINATION ${CMAKE_INSTALL_INCLUDEDIR} COMPONENT headers FILES_MATCHING REGEX ".*\\.(hpp|h)$")
 install(EXPORT ${PROJECT_NAME}Targets DESTINATION ${CMAKE_INSTALL_LIBDIR}/cmake/${PROJECT_NAME})
+install(FILES cmake/FindSQLiteCpp.cmake DESTINATION ${CMAKE_INSTALL_LIBDIR}/cmake/${PROJECT_NAME})
 
 include(CMakePackageConfigHelpers)
 write_basic_package_version_file(
@@ -402,3 +404,10 @@ endif (SQLITECPP_BUILD_TESTS)
 
 # API version for SQLiteCpp shared library.
 set_property(TARGET SQLiteCpp PROPERTY SOVERSION 0)
+
+SET(prefix ${CMAKE_INSTALL_PREFIX})
+SET(exec_prefix ${CMAKE_INSTALL_PREFIX})
+SET(libdir ${CMAKE_INSTALL_PREFIX}/lib)
+SET(includedir ${CMAKE_INSTALL_PREFIX}/include)
+CONFIGURE_FILE(${CMAKE_SOURCE_DIR}/SQLiteCpp.pc.in ${CMAKE_BINARY_DIR}/SQLiteCpp.pc @ONLY)
+INSTALL(FILES ${CMAKE_BINARY_DIR}/SQLiteCpp.pc DESTINATION ${CMAKE_INSTALL_PREFIX}/lib/pkgconfig)
--- origsrc/SQLiteCpp-3.1.0/SQLiteCpp.pc.in	1970-01-01 09:00:00.000000000 +0900
+++ src/SQLiteCpp-3.1.0/SQLiteCpp.pc.in	2020-08-13 15:20:12.052388200 +0900
@@ -0,0 +1,10 @@
+prefix=@prefix@
+exec_prefix=@exec_prefix@
+libdir=@libdir@
+includedir=@includedir@
+
+Name: SQLiteCpp
+Description: Smart and easy to use C++ SQLite3 wrapper
+Version: @PROJECT_VERSION@
+Libs: -L${libdir} -lSQLiteCpp
+Cflags: -I${includedir}
