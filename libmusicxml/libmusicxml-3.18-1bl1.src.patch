diff -buprN -x CYGWIN-PATCHES -x aclocal.m4~ -x aclocal.m4t -x autom4te.cache -x config.cache -x config.guess -x config.log -x config.status -x config.sub -x '*SlackBuild*' -x '*.egg-info' -x '*.dll' -x '*.exe' -x '*.o' -x '*.gch' -x '*.gem' -x .gitignore -x '*.jpg' -x '*.png' -x '*.qm' -x '*.svgz' -x '*.tif' -x '*.class' -x '*.jlc' -x '*.pyc' -x '*.pyo' -x '*.mo' -x '*.gmo' -x '*.orig' -x '*.rej' -x '*.spec' -x '*.temp' -x '*.whl' -x '*~' -x '*.stackdump' -x x86_64-pc-cygwin -x omf.make -x xmldocs.make -x gnome-doc-utils.make -x gnome-doc-utils.m4 -x mate-doc-utils.make -x mate-doc-utils.m4 -x '*.a' origsrc/libmusicxml-3.18/build/CMakeLists.txt src/libmusicxml-3.18/build/CMakeLists.txt
--- origsrc/libmusicxml-3.18/build/CMakeLists.txt	2020-01-16 07:26:19.000000000 +0900
+++ src/libmusicxml-3.18/build/CMakeLists.txt	2020-01-22 23:33:19.237763800 +0900
@@ -11,7 +11,7 @@ endif()
 # versions management
 set (XMLVERSION 3.1)
 
-set (VERSION 3.1.8)
+set (VERSION 3.18)
 macro (get_major_minor_patch version)
 	string( REGEX REPLACE "([0-9]*)\\.([0-9]*)\\.([0-9]*)" "\\1"  VERSION_MAJOR ${version} )
 	string( REGEX REPLACE "([0-9]*)\\.([0-9]*)\\.([0-9]*)" "\\2"  VERSION_MINOR ${version} )
@@ -19,8 +19,8 @@ macro (get_major_minor_patch version)
 endmacro()
 get_major_minor_patch( ${VERSION} )
 set (SOVERS ${VERSION_MAJOR})
-set (STRVERS "v.3.17")
-set (SSTRVERS "3.17")
+set (STRVERS "v.3.18")
+set (SSTRVERS "3.18")
 message (STATUS "Configuring version ${VERSION_MAJOR}.${VERSION_MINOR}.${VERSION_PATCH}")
 
 get_filename_component(ROOT ${CMAKE_CURRENT_SOURCE_DIR} DIRECTORY)
@@ -149,7 +149,7 @@ set_target_properties (${target} PROPERT
 )
 endif()
 
-if (NOT WIN32)
+if (NOT WIN32 AND NOT CYGWIN)
 add_library(${staticlib} STATIC ${LIBCONTENT})
 set_target_properties (${staticlib} PROPERTIES
 			VERSION ${VERSION}
@@ -230,7 +230,7 @@ endif ()
 
 if (NOT IOS)
 message (STATUS "Install location is ${CMAKE_INSTALL_PREFIX}")		
-if (WIN32)
+if (WIN32 OR CYGWIN)
 	set (INSTALLED ${target})
 else()
 	set (INSTALLED ${target}  ${staticlib})
@@ -264,16 +264,17 @@ install (
     PERMISSIONS OWNER_READ OWNER_WRITE GROUP_READ WORLD_READ
 )
 
-install (
+if (NOT CYGWIN)
+	install (
     FILES ${ROOT}/packages/README.html DESTINATION .
     PERMISSIONS OWNER_READ OWNER_WRITE GROUP_READ WORLD_READ
-)
+	)
 
-install (
+	install (
     FILES ${ROOT}/CHANGELOG.txt  DESTINATION .
     PERMISSIONS OWNER_READ OWNER_WRITE GROUP_READ WORLD_READ
-)
-
+	)
+endif()
 
 ####################################
 # install VS redistributables
@@ -318,3 +319,10 @@ include (CPack)
 
 
 endif()
+
+SET(prefix ${CMAKE_INSTALL_PREFIX})
+SET(exec_prefix ${CMAKE_INSTALL_PREFIX})
+SET(libdir ${CMAKE_INSTALL_PREFIX}/lib)
+SET(includedir ${CMAKE_INSTALL_PREFIX}/include)
+CONFIGURE_FILE(${CMAKE_SOURCE_DIR}/libmusicxml.pc.in ${CMAKE_BINARY_DIR}/libmusicxml.pc @ONLY)
+INSTALL(FILES ${CMAKE_BINARY_DIR}/libmusicxml.pc DESTINATION ${CMAKE_INSTALL_PREFIX}/lib/pkgconfig)
diff -buprN -x CYGWIN-PATCHES -x aclocal.m4~ -x aclocal.m4t -x autom4te.cache -x config.cache -x config.guess -x config.log -x config.status -x config.sub -x '*SlackBuild*' -x '*.egg-info' -x '*.dll' -x '*.exe' -x '*.o' -x '*.gch' -x '*.gem' -x .gitignore -x '*.jpg' -x '*.png' -x '*.qm' -x '*.svgz' -x '*.tif' -x '*.class' -x '*.jlc' -x '*.pyc' -x '*.pyo' -x '*.mo' -x '*.gmo' -x '*.orig' -x '*.rej' -x '*.spec' -x '*.temp' -x '*.whl' -x '*~' -x '*.stackdump' -x x86_64-pc-cygwin -x omf.make -x xmldocs.make -x gnome-doc-utils.make -x gnome-doc-utils.m4 -x mate-doc-utils.make -x mate-doc-utils.m4 -x '*.a' origsrc/libmusicxml-3.18/build/libmusicxml.pc.in src/libmusicxml-3.18/build/libmusicxml.pc.in
--- origsrc/libmusicxml-3.18/build/libmusicxml.pc.in	1970-01-01 09:00:00.000000000 +0900
+++ src/libmusicxml-3.18/build/libmusicxml.pc.in	2020-01-22 23:22:42.952636400 +0900
@@ -0,0 +1,10 @@
+prefix=@prefix@
+exec_prefix=@exec_prefix@
+libdir=@libdir@
+includedir=@includedir@
+
+Name: libmusicxml
+Description: C/C++ library to support the MusicXML format
+Version: @VERSION@
+Libs: -L${libdir} -lmusicxml2
+Cflags: -I${includedir}
