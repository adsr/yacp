--- origsrc/libplctag-2.1.5/CMakeLists.txt	2020-05-05 12:44:32.000000000 +0900
+++ src/libplctag-2.1.5/CMakeLists.txt	2020-05-28 13:09:02.378643700 +0900
@@ -262,14 +262,14 @@ if(BASE_LINK_FLAGS)
     set_target_properties(plctag_dyn PROPERTIES LINK_FLAGS "${BASE_LINK_FLAGS}")
 endif()
 
-if(UNIX)
+if(UNIX AND NOT CYGWIN)
 	# static library
 	add_library(plctag_static STATIC ${libplctag_SRCS} )
     set_target_properties(plctag_static PROPERTIES LINK_FLAGS "${BASE_LINK_FLAGS}")
 	set_target_properties(plctag_static PROPERTIES VERSION "${libplctag_VERSION_MAJOR}.${libplctag_VERSION_MINOR}" OUTPUT_NAME "plctag")
 
 	set(tool_lib "plctag_dyn")
-elseif(WIN32)
+elseif(WIN32 OR CYGWIN)
     # skipping static lib on Windows
 
 	set(tool_lib "plctag_dyn")
@@ -354,6 +354,8 @@ foreach ( example ${example_PROGRAMS} )
     if(BASE_LINK_FLAGS)
         set_target_properties(${example} PROPERTIES LINK_FLAGS "${BASE_LINK_FLAGS}")
     endif()
+
+    install(TARGETS ${example} DESTINATION share/libplctag/example)
 endforeach(example)
 
 # simple.cpp is different because it is C++
@@ -368,6 +370,7 @@ if(BASE_LINK_FLAGS)
     set_target_properties(simple_cpp PROPERTIES LINK_FLAGS "${BASE_LINK_FLAGS}")
 endif()
 
+install(TARGETS simple_cpp DESTINATION share/libplctag/example)
 
 # Generate files from templates
 CONFIGURE_FILE("${CMAKE_CURRENT_SOURCE_DIR}/libplctag.pc.in" "${CMAKE_LIBRARY_OUTPUT_DIRECTORY}/libplctag.pc" @ONLY)
@@ -405,11 +408,11 @@ endif()
 CONFIGURE_FILE("${CMAKE_CURRENT_SOURCE_DIR}/src/lib/libplctag.h" "${CMAKE_LIBRARY_OUTPUT_DIRECTORY}/libplctag.h" COPYONLY)
 
 # for installation
-if(UNIX)
+if(UNIX AND NOT CYGWIN)
 	install(TARGETS plctag_dyn DESTINATION lib${LIB_SUFFIX})
 	install(TARGETS plctag_static DESTINATION lib${LIB_SUFFIX})
-elseif(WIN32)
-	install(TARGETS plctag_dyn DESTINATION lib${LIB_SUFFIX})
+elseif(WIN32 OR CYGWIN)
+	install(TARGETS plctag_dyn RUNTIME DESTINATION bin ARCHIVE DESTINATION lib${LIB_SUFFIX})
 endif()
 
 install(FILES "${lib_SRC_PATH}/libplctag.h" DESTINATION include)
--- origsrc/libplctag-2.1.5/src/lib/version.h	1970-01-01 09:00:00.000000000 +0900
+++ src/libplctag-2.1.5/src/lib/version.h	2020-05-28 12:57:01.963065000 +0900
@@ -0,0 +1,40 @@
+/***************************************************************************
+ *   Copyright (C) 2020 by Kyle Hayes                                      *
+ *   Author Kyle Hayes  kyle.hayes@gmail.com                               *
+ *                                                                         *
+ *   This program is free software; you can redistribute it and/or modify  *
+ *   it under the terms of the GNU Library General Public License as       *
+ *   published by the Free Software Foundation; either version 2 of the    *
+ *   License, or (at your option) any later version.                       *
+ *                                                                         *
+ *   This program is distributed in the hope that it will be useful,       *
+ *   but WITHOUT ANY WARRANTY; without even the implied warranty of        *
+ *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the         *
+ *   GNU Library General Public License for more details.                  *
+ *                                                                         *
+ *   You should have received a copy of the GNU Library General Public     *
+ *   License along with this program; if not, write to the                 *
+ *   Free Software Foundation, Inc.,                                       *
+ *   59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.             *
+ ***************************************************************************/
+
+#pragma once
+
+#include <stdint.h>
+
+/*
+ * The library version in various ways.
+ *
+ * The defines are for building in specific versions and then
+ * checking them against a dynamically linked library.
+ */
+
+#define LIB_VER_STRING "2.1.5"
+#define LIB_VER_MAJOR (2)
+#define LIB_VER_MINOR (1)
+#define LIB_VER_PATCH (5)
+
+extern const char *VERSION;
+extern const uint64_t version_major;
+extern const uint64_t version_minor;
+extern const uint64_t version_patch;
