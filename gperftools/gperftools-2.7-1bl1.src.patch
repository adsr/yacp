--- origsrc/gperftools-gperftools-2.7/Makefile.am	2018-04-30 15:00:34.000000000 +0900
+++ src/gperftools-gperftools-2.7/Makefile.am	2020-02-29 18:14:37.833666000 +0900
@@ -959,7 +959,7 @@ libtcmalloc_internal_la_LIBADD = libstac
 lib_LTLIBRARIES += libtcmalloc.la
 libtcmalloc_la_SOURCES = $(TCMALLOC_CC) $(TCMALLOC_INCLUDES)
 libtcmalloc_la_CXXFLAGS = $(PTHREAD_CFLAGS) -DNDEBUG $(AM_CXXFLAGS) $(EMERGENCY_MALLOC_DEFINE)
-libtcmalloc_la_LDFLAGS = $(PTHREAD_CFLAGS) -version-info @TCMALLOC_SO_VERSION@
+libtcmalloc_la_LDFLAGS = $(PTHREAD_CFLAGS) -no-undefined -version-info @TCMALLOC_SO_VERSION@
 libtcmalloc_la_LIBADD = libtcmalloc_internal.la libmaybe_threads.la $(PTHREAD_LIBS)
 
 if WITH_HEAP_CHECKER
--- origsrc/gperftools-gperftools-2.7/benchmark/getcontext_light.cc	2018-04-30 15:00:34.000000000 +0900
+++ src/gperftools-gperftools-2.7/benchmark/getcontext_light.cc	2020-02-29 20:05:14.753071100 +0900
@@ -4,7 +4,7 @@
 extern "C" void getcontext_light(ucontext_t *ctx);
 
 // clang's built-in asm cannot handle .set directives
-#if defined(__GNUC__) && !defined(__llvm__) && defined(__x86_64) && defined(_LP64)
+#if defined(__GNUC__) && !defined(__llvm__) && defined(__x86_64) && defined(_LP64) && !defined(__CYGWIN__)
 
 #define R(r) offsetof(ucontext_t, uc_mcontext.gregs[r])
 
--- origsrc/gperftools-gperftools-2.7/benchmark/malloc_bench.cc	2018-04-30 15:00:34.000000000 +0900
+++ src/gperftools-gperftools-2.7/benchmark/malloc_bench.cc	2020-02-29 20:02:33.996754700 +0900
@@ -85,8 +85,13 @@ static void bench_fastpath_simple(long i
 #ifdef __GNUC__
 #define HAVE_SIZED_FREE_OPTION
 
+#if defined(__CYGWIN__)
+extern "C" void tc_free_sized(void *ptr, size_t size);
+extern "C" void *tc_memalign(size_t align, size_t size);
+#else
 extern "C" void tc_free_sized(void *ptr, size_t size) __attribute__((weak));
 extern "C" void *tc_memalign(size_t align, size_t size) __attribute__((weak));
+#endif
 
 static bool is_sized_free_available(void)
 {
--- origsrc/gperftools-gperftools-2.7/src/base/basictypes.h	2018-04-30 15:00:34.000000000 +0900
+++ src/gperftools-gperftools-2.7/src/base/basictypes.h	2020-02-29 18:25:02.934420800 +0900
@@ -247,7 +247,7 @@ inline void bit_store(Dest *dest, const
   memcpy(dest, source, sizeof(Dest));
 }
 
-#ifdef HAVE___ATTRIBUTE__
+#if defined(HAVE___ATTRIBUTE__) && !defined(__CYGWIN__) 
 # define ATTRIBUTE_WEAK      __attribute__((weak))
 # define ATTRIBUTE_NOINLINE  __attribute__((noinline))
 #else
