--- origsrc/xxHash-0.8.0/cmake_unofficial/CMakeLists.txt	2020-07-28 03:57:06.000000000 +0900
+++ src/xxHash-0.8.0/cmake_unofficial/CMakeLists.txt	2020-08-07 19:51:51.729693100 +0900
@@ -78,8 +78,8 @@ if (BUILD_SHARED_LIBS)
   target_compile_definitions(xxhash PUBLIC XXH_EXPORT)
 endif ()
 set_target_properties(xxhash PROPERTIES
-  SOVERSION "${XXHASH_VERSION_STRING}"
-  VERSION "${XXHASH_VERSION_STRING}")
+  SOVERSION "${XXHASH_LIB_SOVERSION}"
+  VERSION "${XXHASH_LIB_VERSION}")
 
 if(XXHASH_BUILD_XXHSUM)
   # xxhsum
@@ -166,3 +166,10 @@ if(NOT XXHASH_BUNDLED_MODE)
     DESTINATION ${xxHash_CONFIG_INSTALL_DIR}
     NAMESPACE ${PROJECT_NAME}::)
 endif(NOT XXHASH_BUNDLED_MODE)
+
+SET(PREFIX ${CMAKE_INSTALL_PREFIX})
+SET(EXECPREFIX ${CMAKE_INSTALL_PREFIX})
+SET(INCLUDEDIR include)
+SET(LIBDIR lib)
+CONFIGURE_FILE(${XXHASH_DIR}/libxxhash.pc.in ${CMAKE_BINARY_DIR}/libxxhash.pc @ONLY)
+INSTALL(FILES ${CMAKE_BINARY_DIR}/libxxhash.pc DESTINATION ${CMAKE_INSTALL_PREFIX}/lib/pkgconfig)
--- origsrc/xxHash-0.8.0/libxxhash.pc.in	2020-07-28 03:57:06.000000000 +0900
+++ src/xxHash-0.8.0/libxxhash.pc.in	2020-08-07 19:50:20.133441100 +0900
@@ -3,13 +3,13 @@
 #   BSD 2-Clause License (https://www.opensource.org/licenses/bsd-license.php)
 
 prefix=@PREFIX@
-exec_prefix=@EXECPREFIX@
+exec_prefix=@PREFIX@
 includedir=${prefix}/@INCLUDEDIR@
 libdir=${exec_prefix}/@LIBDIR@
 
 Name: xxhash
 Description: extremely fast hash algorithm
 URL: https://www.xxhash.com/
-Version: @VERSION@
+Version: @XXHASH_VERSION_STRING@
 Libs: -L${libdir} -lxxhash
 Cflags: -I${includedir}
--- origsrc/xxHash-0.8.0/xxhsum.c	2020-07-28 03:57:06.000000000 +0900
+++ src/xxHash-0.8.0/xxhsum.c	2020-08-07 19:47:00.459422000 +0900
@@ -95,7 +95,7 @@
 #if (defined(__linux__) && (PLATFORM_POSIX_VERSION >= 1)) \
  || (PLATFORM_POSIX_VERSION >= 200112L) \
  || defined(__DJGPP__) \
- || defined(__MSYS__)
+ || defined(__MSYS__) || defined(__CYGWIN__)
 #  include <unistd.h>   /* isatty */
 #  define IS_CONSOLE(stdStream) isatty(fileno(stdStream))
 #elif defined(MSDOS) || defined(OS2)
