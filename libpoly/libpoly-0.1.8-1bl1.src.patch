--- origsrc/libpoly-0.1.8/CMakeLists.txt	2020-04-02 00:03:02.000000000 +0900
+++ src/libpoly-0.1.8/CMakeLists.txt	2020-05-28 13:19:47.348539900 +0900
@@ -75,3 +75,10 @@ if(LIBPOLY_BUILD_PYTHON_API)
   add_subdirectory(test)
 
 endif()
+
+SET(prefix ${CMAKE_INSTALL_PREFIX})
+SET(exec_prefix ${CMAKE_INSTALL_PREFIX})
+SET(libdir ${CMAKE_INSTALL_PREFIX}/lib)
+SET(includedir ${CMAKE_INSTALL_PREFIX}/include)
+CONFIGURE_FILE(${CMAKE_SOURCE_DIR}/libpoly.pc.in ${CMAKE_BINARY_DIR}/libpoly.pc @ONLY)
+INSTALL(FILES ${CMAKE_BINARY_DIR}/libpoly.pc DESTINATION ${CMAKE_INSTALL_PREFIX}/lib/pkgconfig)
--- origsrc/libpoly-0.1.8/libpoly.pc.in	1970-01-01 09:00:00.000000000 +0900
+++ src/libpoly-0.1.8/libpoly.pc.in	2020-05-28 13:20:18.060269400 +0900
@@ -0,0 +1,10 @@
+prefix=@prefix@
+exec_prefix=@exec_prefix@
+libdir=@libdir@
+includedir=@includedir@
+
+Name: libpoly
+Description: C library for manipulating polynomials
+Version: @LIBPOLY_VERSION@
+Libs: -L${libdir} -lpoly
+Cflags: -I${includedir}
--- origsrc/libpoly-0.1.8/python/CMakeLists.txt	2020-04-02 00:03:02.000000000 +0900
+++ src/libpoly-0.1.8/python/CMakeLists.txt	2020-05-28 13:23:43.236670900 +0900
@@ -24,7 +24,7 @@ set_target_properties(polypy PROPERTIES
 if (APPLE)
   set_target_properties(polypy PROPERTIES LINK_FLAGS "-undefined dynamic_lookup")
 endif()
-target_link_libraries(polypy poly)
+target_link_libraries(polypy poly ${PYTHON_LIBRARIES})
 
 string (REPLACE ";" "', '" polypy_SOURCES_STR "${polypy_SOURCES}")
 configure_file(setup.py.in ${CMAKE_CURRENT_SOURCE_DIR}/setup.py)
--- origsrc/libpoly-0.1.8/src/CMakeLists.txt	2020-04-02 00:03:02.000000000 +0900
+++ src/libpoly-0.1.8/src/CMakeLists.txt	2020-05-28 13:18:47.498053200 +0900
@@ -60,7 +60,7 @@ target_link_libraries(poly ${GMP_LIBRARY
 # cmake complains if the RUNTIME DESTINATION bin is missing
 #
 if (CYGWIN OR WIN32 OR MINGW)
- install(TARGETS poly LIBRARY DESTINATION lib RUNTIME DESTINATION bin)
+ install(TARGETS poly ARCHIVE DESTINATION lib RUNTIME DESTINATION bin)
 else()
  install(TARGETS poly LIBRARY DESTINATION lib)
 endif()
