--- origsrc/g2o-20200410_git/EXTERNAL/csparse/CMakeLists.txt	2020-04-10 20:43:21.000000000 +0900
+++ src/g2o-20200410_git/EXTERNAL/csparse/CMakeLists.txt	2020-07-08 09:57:04.752268000 +0900
@@ -63,6 +63,9 @@ set_target_properties(csparse PROPERTIES
 if (APPLE)
   set_target_properties(csparse PROPERTIES INSTALL_NAME_DIR "${CMAKE_INSTALL_PREFIX}/lib")
 endif()
+if (CYGWIN)
+  set_target_properties(csparse PROPERTIES SOVERSION 0)
+endif()
 if (UNIX)
   target_link_libraries(csparse PUBLIC m)
 endif()
--- origsrc/g2o-20200410_git/EXTERNAL/freeglut/CMakeLists.txt	2020-04-10 20:43:21.000000000 +0900
+++ src/g2o-20200410_git/EXTERNAL/freeglut/CMakeLists.txt	2020-07-08 09:57:28.896470800 +0900
@@ -10,6 +10,9 @@ set_target_properties(freeglut_minimal P
 if (APPLE)
   set_target_properties(freeglut_minimal PROPERTIES INSTALL_NAME_DIR "${CMAKE_INSTALL_PREFIX}/lib")
 endif()
+if (CYGWIN)
+  set_target_properties(freeglut_minimal PROPERTIES SOVERSION 0)
+endif()
 
 install(TARGETS freeglut_minimal
   EXPORT ${G2O_TARGETS_EXPORT_NAME}
--- origsrc/g2o-20200410_git/g2o/apps/g2o_cli/CMakeLists.txt	2020-04-10 20:43:21.000000000 +0900
+++ src/g2o-20200410_git/g2o/apps/g2o_cli/CMakeLists.txt	2020-07-08 09:58:43.245317900 +0900
@@ -10,6 +10,10 @@ if (APPLE)
   set_target_properties(g2o_cli_library PROPERTIES INSTALL_NAME_DIR "${CMAKE_INSTALL_PREFIX}/lib")
 endif()
 
+if (CYGWIN)
+  set_target_properties(g2o_cli_library PROPERTIES SOVERSION 0)
+endif()
+
 set_property(TARGET g2o_cli_library APPEND PROPERTY COMPILE_DEFINITIONS G2O_DEFAULT_TYPES_DIR_="${CMAKE_LIBRARY_OUTPUT_DIRECTORY}" G2O_DEFAULT_SOLVERS_DIR_="${CMAKE_LIBRARY_OUTPUT_DIRECTORY}")
 
 target_link_libraries(g2o_cli_library core)
--- origsrc/g2o-20200410_git/g2o/apps/g2o_hierarchical/CMakeLists.txt	2020-04-10 20:43:21.000000000 +0900
+++ src/g2o-20200410_git/g2o/apps/g2o_hierarchical/CMakeLists.txt	2020-07-08 09:59:17.440390700 +0900
@@ -21,6 +21,10 @@ if (APPLE)
   set_target_properties(g2o_hierarchical_library PROPERTIES INSTALL_NAME_DIR "${CMAKE_INSTALL_PREFIX}/lib")
 endif()
 
+if (CYGWIN)
+  set_target_properties(g2o_hierarchical_library PROPERTIES SOVERSION 0)
+endif()
+
 target_link_libraries(g2o_hierarchical_library core)
 
 add_executable(g2o_hierarchical_application
--- origsrc/g2o-20200410_git/g2o/apps/g2o_simulator/CMakeLists.txt	2020-04-10 20:43:21.000000000 +0900
+++ src/g2o-20200410_git/g2o/apps/g2o_simulator/CMakeLists.txt	2020-07-08 09:59:38.907473700 +0900
@@ -30,6 +30,10 @@ if (APPLE)
   set_target_properties(g2o_simulator_library PROPERTIES INSTALL_NAME_DIR "${CMAKE_INSTALL_PREFIX}/lib")
 endif()
 
+if (CYGWIN)
+  set_target_properties(g2o_simulator_library PROPERTIES SOVERSION 0)
+endif()
+
 target_link_libraries(g2o_simulator_library types_slam3d_addons types_slam3d types_slam2d_addons types_slam2d  core)
 
 add_executable(g2o_simulator2d_application
--- origsrc/g2o-20200410_git/g2o/apps/g2o_viewer/CMakeLists.txt	2020-04-10 20:43:21.000000000 +0900
+++ src/g2o-20200410_git/g2o/apps/g2o_viewer/CMakeLists.txt	2020-07-08 10:00:05.498107100 +0900
@@ -26,6 +26,10 @@ if (APPLE)
   set_target_properties(viewer_library PROPERTIES INSTALL_NAME_DIR "${CMAKE_INSTALL_PREFIX}/lib")
 endif()
 
+if (CYGWIN)
+  set_target_properties(viewer_library PROPERTIES SOVERSION 0)
+endif()
+
 add_executable(g2o_viewer
   g2o_viewer.cpp
 )
--- origsrc/g2o-20200410_git/g2o/core/CMakeLists.txt	2020-04-10 20:43:21.000000000 +0900
+++ src/g2o-20200410_git/g2o/core/CMakeLists.txt	2020-07-08 10:00:54.958789500 +0900
@@ -46,6 +46,10 @@ if (APPLE)
   set_target_properties(core PROPERTIES INSTALL_NAME_DIR "${CMAKE_INSTALL_PREFIX}/lib")
 endif()
 
+if (CYGWIN)
+  set_target_properties(core PROPERTIES SOVERSION 0)
+endif()
+
 install(TARGETS core
   EXPORT ${G2O_TARGETS_EXPORT_NAME}
   RUNTIME DESTINATION ${RUNTIME_DESTINATION}
--- origsrc/g2o-20200410_git/g2o/examples/interactive_slam/g2o_incremental/CMakeLists.txt	2020-04-10 20:43:21.000000000 +0900
+++ src/g2o-20200410_git/g2o/examples/interactive_slam/g2o_incremental/CMakeLists.txt	2020-07-08 10:02:07.820457500 +0900
@@ -8,6 +8,10 @@ include_directories(${CMAKE_CURRENT_SOUR
 set_target_properties(g2o_incremental_library PROPERTIES OUTPUT_NAME ${LIB_PREFIX}incremental)
 target_link_libraries(g2o_incremental_library g2o_interactive_library solver_cholmod ${CAMD_LIBRARY})
 
+if (CYGWIN)
+  set_target_properties(g2o_incremental_library PROPERTIES SOVERSION 0)
+endif()
+
 add_executable(g2o_incremental_application g2o_incremental.cpp)
 target_link_libraries(g2o_incremental_application g2o_incremental_library)
 set_target_properties(g2o_incremental_application PROPERTIES OUTPUT_NAME g2o_incremental${EXE_POSTFIX})
--- origsrc/g2o-20200410_git/g2o/examples/interactive_slam/g2o_incremental/graph_optimizer_sparse_incremental.h	2020-04-10 20:43:21.000000000 +0900
+++ src/g2o-20200410_git/g2o/examples/interactive_slam/g2o_incremental/graph_optimizer_sparse_incremental.h	2020-07-08 10:02:58.749025800 +0900
@@ -23,6 +23,10 @@
 
 #include "linear_solver_cholmod_online.h"
 
+#if defined(_L)
+#undef _L
+#endif
+
 namespace g2o {
 
   struct CholmodExt;
--- origsrc/g2o-20200410_git/g2o/examples/interactive_slam/g2o_interactive/CMakeLists.txt	2020-04-10 20:43:21.000000000 +0900
+++ src/g2o-20200410_git/g2o/examples/interactive_slam/g2o_interactive/CMakeLists.txt	2020-07-08 10:03:23.254837900 +0900
@@ -10,6 +10,10 @@ include_directories(${CHOLMOD_INCLUDE_DI
 set_target_properties(g2o_interactive_library PROPERTIES OUTPUT_NAME ${LIB_PREFIX}interactive)
 target_link_libraries(g2o_interactive_library core types_slam2d types_slam3d solver_cholmod parser_library interface_library)
 
+if (CYGWIN)
+  set_target_properties(g2o_interactive_library PROPERTIES SOVERSION 0)
+endif()
+
 add_executable(g2o_online_application g2o_online.cpp)
 target_link_libraries(g2o_online_application g2o_interactive_library)
 set_target_properties(g2o_online_application PROPERTIES OUTPUT_NAME g2o_online${EXE_POSTFIX})
--- origsrc/g2o-20200410_git/g2o/examples/interactive_slam/slam_parser/interface/CMakeLists.txt	2020-04-10 20:43:21.000000000 +0900
+++ src/g2o-20200410_git/g2o/examples/interactive_slam/slam_parser/interface/CMakeLists.txt	2020-07-08 10:04:10.155086700 +0900
@@ -21,6 +21,10 @@ include_directories(${CMAKE_CURRENT_SOUR
 set_target_properties(interface_library PROPERTIES OUTPUT_NAME ${LIB_PREFIX}interface)
 target_link_libraries(interface_library parser_library)
 
+if (CYGWIN)
+  set_target_properties(interface_library PROPERTIES SOVERSION 0)
+endif()
+
 install(TARGETS interface_library
   RUNTIME DESTINATION ${RUNTIME_DESTINATION}
   LIBRARY DESTINATION ${LIBRARY_DESTINATION}
--- origsrc/g2o-20200410_git/g2o/examples/interactive_slam/slam_parser/parser/CMakeLists.txt	2020-04-10 20:43:21.000000000 +0900
+++ src/g2o-20200410_git/g2o/examples/interactive_slam/slam_parser/parser/CMakeLists.txt	2020-07-08 10:04:34.986450200 +0900
@@ -23,6 +23,10 @@ include_directories(${CMAKE_CURRENT_SOUR
 
 set_target_properties(parser_library PROPERTIES OUTPUT_NAME ${LIB_PREFIX}parser)
 
+if (CYGWIN)
+  set_target_properties(parser_library PROPERTIES SOVERSION 0)
+endif()
+
 #add_executable(test_slam_parser test_slam_parser.cpp)
 #target_link_libraries(test_slam_parser parser_library)
 #set_target_properties(test_slam_parser PROPERTIES OUTPUT_NAME test_slam_parser${EXE_POSTFIX})
--- origsrc/g2o-20200410_git/g2o/solvers/cholmod/CMakeLists.txt	2020-04-10 20:43:21.000000000 +0900
+++ src/g2o-20200410_git/g2o/solvers/cholmod/CMakeLists.txt	2020-07-08 10:05:05.297181900 +0900
@@ -14,6 +14,10 @@ if (APPLE)
   set_target_properties(solver_cholmod PROPERTIES INSTALL_NAME_DIR "${CMAKE_INSTALL_PREFIX}/lib")
 endif()
 
+if (CYGWIN)
+  set_target_properties(solver_cholmod PROPERTIES SOVERSION 0)
+endif()
+
 add_definitions(${BLAS_DEFINITIONS} ${LAPACK_DEFINITIONS})
 target_link_libraries(solver_cholmod ${CHOLMOD_LIBRARIES} ${BLAS_LIBRARIES} ${LAPACK_LIBRARIES} core)
 
--- origsrc/g2o-20200410_git/g2o/solvers/csparse/CMakeLists.txt	2020-04-10 20:43:21.000000000 +0900
+++ src/g2o-20200410_git/g2o/solvers/csparse/CMakeLists.txt	2020-07-08 10:05:55.018400800 +0900
@@ -14,6 +14,10 @@ if (APPLE)
   set_target_properties(csparse_extension PROPERTIES INSTALL_NAME_DIR "${CMAKE_INSTALL_PREFIX}/lib")
 endif()
 
+if (CYGWIN)
+  set_target_properties(csparse_extension PROPERTIES SOVERSION 0)
+endif()
+
 if(BUILD_CSPARSE)
   target_link_libraries(csparse_extension PUBLIC csparse ${G2O_EIGEN3_EIGEN_TARGET})
 else()
@@ -30,6 +34,10 @@ if (APPLE)
   set_target_properties(solver_csparse PROPERTIES INSTALL_NAME_DIR "${CMAKE_INSTALL_PREFIX}/lib")
 endif()
 
+if (CYGWIN)
+  set_target_properties(solver_csparse PROPERTIES SOVERSION 0)
+endif()
+
 target_link_libraries(solver_csparse
   PUBLIC csparse_extension
   PUBLIC core)
--- origsrc/g2o-20200410_git/g2o/solvers/dense/CMakeLists.txt	2020-04-10 20:43:21.000000000 +0900
+++ src/g2o-20200410_git/g2o/solvers/dense/CMakeLists.txt	2020-07-08 10:06:17.249297300 +0900
@@ -7,6 +7,10 @@ if (APPLE)
   set_target_properties(solver_dense PROPERTIES INSTALL_NAME_DIR "${CMAKE_INSTALL_PREFIX}/lib")
 endif()
 
+if (CYGWIN)
+  set_target_properties(solver_dense PROPERTIES SOVERSION 0)
+endif()
+
 target_link_libraries(solver_dense core)
 
 install(TARGETS solver_dense
--- origsrc/g2o-20200410_git/g2o/solvers/eigen/CMakeLists.txt	2020-04-10 20:43:21.000000000 +0900
+++ src/g2o-20200410_git/g2o/solvers/eigen/CMakeLists.txt	2020-07-08 10:06:36.631435400 +0900
@@ -6,6 +6,11 @@ set_target_properties(solver_eigen PROPE
 if (APPLE)
   set_target_properties(solver_eigen PROPERTIES INSTALL_NAME_DIR "${CMAKE_INSTALL_PREFIX}/lib")
 endif()
+
+if (CYGWIN)
+  set_target_properties(solver_eigen PROPERTIES SOVERSION 0)
+endif()
+
 target_link_libraries(solver_eigen core)
 
 install(TARGETS solver_eigen
--- origsrc/g2o-20200410_git/g2o/solvers/pcg/CMakeLists.txt	2020-04-10 20:43:21.000000000 +0900
+++ src/g2o-20200410_git/g2o/solvers/pcg/CMakeLists.txt	2020-07-08 10:06:56.303795100 +0900
@@ -9,6 +9,10 @@ if (APPLE)
   set_target_properties(solver_pcg PROPERTIES INSTALL_NAME_DIR "${CMAKE_INSTALL_PREFIX}/lib")
 endif()
 
+if (CYGWIN)
+  set_target_properties(solver_pcg PROPERTIES SOVERSION 0)
+endif()
+
 target_link_libraries(solver_pcg core)
 
 install(TARGETS solver_pcg
--- origsrc/g2o-20200410_git/g2o/solvers/slam2d_linear/CMakeLists.txt	2020-04-10 20:43:21.000000000 +0900
+++ src/g2o-20200410_git/g2o/solvers/slam2d_linear/CMakeLists.txt	2020-07-08 10:07:17.314365700 +0900
@@ -15,6 +15,10 @@ if (APPLE)
   set_target_properties(solver_slam2d_linear PROPERTIES INSTALL_NAME_DIR "${CMAKE_INSTALL_PREFIX}/lib")
 endif()
 
+if (CYGWIN)
+  set_target_properties(solver_slam2d_linear PROPERTIES SOVERSION 0)
+endif()
+
 target_link_libraries(solver_slam2d_linear solver_csparse types_slam2d)
 
 install(TARGETS solver_slam2d_linear
--- origsrc/g2o-20200410_git/g2o/solvers/structure_only/CMakeLists.txt	2020-04-10 20:43:21.000000000 +0900
+++ src/g2o-20200410_git/g2o/solvers/structure_only/CMakeLists.txt	2020-07-08 10:07:44.610282000 +0900
@@ -8,6 +8,10 @@ if (APPLE)
   set_target_properties(solver_structure_only PROPERTIES INSTALL_NAME_DIR "${CMAKE_INSTALL_PREFIX}/lib")
 endif()
 
+if (CYGWIN)
+  set_target_properties(solver_structure_only PROPERTIES SOVERSION 0)
+endif()
+
 target_link_libraries(solver_structure_only core)
 
 install(TARGETS solver_structure_only
--- origsrc/g2o-20200410_git/g2o/stuff/CMakeLists.txt	2020-04-10 20:43:21.000000000 +0900
+++ src/g2o-20200410_git/g2o/stuff/CMakeLists.txt	2020-07-08 10:08:39.018147700 +0900
@@ -17,6 +17,10 @@ if (APPLE)
   set_target_properties(stuff PROPERTIES INSTALL_NAME_DIR "${CMAKE_INSTALL_PREFIX}/lib")
 endif()
 
+if (CYGWIN)
+  set_target_properties(stuff PROPERTIES SOVERSION 0)
+endif()
+
 install(TARGETS stuff
   EXPORT ${G2O_TARGETS_EXPORT_NAME}
   RUNTIME DESTINATION ${RUNTIME_DESTINATION}
@@ -31,8 +35,13 @@ if(OPENGL_FOUND AND G2O_HAVE_OPENGL)
     opengl_primitives.cpp opengl_primitives.h
     )
   if (APPLE)
-  set_target_properties(opengl_helper PROPERTIES INSTALL_NAME_DIR "${CMAKE_INSTALL_PREFIX}/lib")
-endif()
+    set_target_properties(opengl_helper PROPERTIES INSTALL_NAME_DIR "${CMAKE_INSTALL_PREFIX}/lib")
+  endif()
+
+  if (CYGWIN)
+    set_target_properties(opengl_helper PROPERTIES SOVERSION 0)
+  endif()
+
   install(TARGETS opengl_helper
     EXPORT ${G2O_TARGETS_EXPORT_NAME}
     RUNTIME DESTINATION ${RUNTIME_DESTINATION}
--- origsrc/g2o-20200410_git/g2o/types/data/CMakeLists.txt	2020-04-10 20:43:21.000000000 +0900
+++ src/g2o-20200410_git/g2o/types/data/CMakeLists.txt	2020-07-08 10:09:13.006330700 +0900
@@ -15,6 +15,9 @@ if (APPLE)
   set_target_properties(types_data PROPERTIES INSTALL_NAME_DIR "${CMAKE_INSTALL_PREFIX}/lib")
 endif()
 
+if (CYGWIN)
+  set_target_properties(types_data PROPERTIES SOVERSION 0)
+endif()
 
 target_link_libraries(types_data core types_slam2d)
 if(G2O_HAVE_OPENGL)
--- origsrc/g2o-20200410_git/g2o/types/deprecated/slam3d/CMakeLists.txt	2020-04-10 20:43:21.000000000 +0900
+++ src/g2o-20200410_git/g2o/types/deprecated/slam3d/CMakeLists.txt	2020-07-08 10:09:44.424102700 +0900
@@ -30,6 +30,11 @@ set_target_properties(deprecated_types_s
 if (APPLE)
   set_target_properties(deprecated_types_slam3d PROPERTIES INSTALL_NAME_DIR "${CMAKE_INSTALL_PREFIX}/lib")
 endif()
+
+if (CYGWIN)
+  set_target_properties(deprecated_types_slam3d PROPERTIES SOVERSION 0)
+endif()
+
 target_link_libraries(deprecated_types_slam3d ${OPENGL_gl_LIBRARY} core types_slam3d)
 
 install(TARGETS deprecated_types_slam3d
--- origsrc/g2o-20200410_git/g2o/types/icp/CMakeLists.txt	2020-04-10 20:43:21.000000000 +0900
+++ src/g2o-20200410_git/g2o/types/icp/CMakeLists.txt	2020-07-08 10:10:10.883410700 +0900
@@ -7,6 +7,11 @@ set_target_properties(types_icp PROPERTI
 if (APPLE)
   set_target_properties(types_icp PROPERTIES INSTALL_NAME_DIR "${CMAKE_INSTALL_PREFIX}/lib")
 endif()
+
+if (CYGWIN)
+  set_target_properties(types_icp PROPERTIES SOVERSION 0)
+endif()
+
 target_link_libraries(types_icp types_sba types_slam3d)
 
 install(TARGETS types_icp
--- origsrc/g2o-20200410_git/g2o/types/sba/CMakeLists.txt	2020-04-10 20:43:21.000000000 +0900
+++ src/g2o-20200410_git/g2o/types/sba/CMakeLists.txt	2020-07-08 10:10:31.612826600 +0900
@@ -8,6 +8,11 @@ set_target_properties(types_sba PROPERTI
 if (APPLE)
   set_target_properties(types_sba PROPERTIES INSTALL_NAME_DIR "${CMAKE_INSTALL_PREFIX}/lib")
 endif()
+
+if (CYGWIN)
+  set_target_properties(types_sba PROPERTIES SOVERSION 0)
+endif()
+
 target_link_libraries(types_sba core types_slam3d)
 
 install(TARGETS types_sba
--- origsrc/g2o-20200410_git/g2o/types/sclam2d/CMakeLists.txt	2020-04-10 20:43:21.000000000 +0900
+++ src/g2o-20200410_git/g2o/types/sclam2d/CMakeLists.txt	2020-07-08 10:11:00.182835100 +0900
@@ -11,6 +11,11 @@ set_target_properties(types_sclam2d PROP
 if (APPLE)
   set_target_properties(types_sclam2d PROPERTIES INSTALL_NAME_DIR "${CMAKE_INSTALL_PREFIX}/lib")
 endif()
+
+if (CYGWIN)
+  set_target_properties(types_sclam2d PROPERTIES SOVERSION 0)
+endif()
+
 target_link_libraries(types_sclam2d types_slam2d core)
 if(G2O_HAVE_OPENGL)
   target_link_libraries(types_sclam2d ${OPENGL_gl_LIBRARY})
--- origsrc/g2o-20200410_git/g2o/types/sim3/CMakeLists.txt	2020-04-10 20:43:21.000000000 +0900
+++ src/g2o-20200410_git/g2o/types/sim3/CMakeLists.txt	2020-07-08 10:11:26.239016800 +0900
@@ -7,6 +7,11 @@ set_target_properties(types_sim3 PROPERT
 if (APPLE)
   set_target_properties(types_sim3 PROPERTIES INSTALL_NAME_DIR "${CMAKE_INSTALL_PREFIX}/lib")
 endif()
+
+if (CYGWIN)
+  set_target_properties(types_sim3 PROPERTIES SOVERSION 0)
+endif()
+
 target_link_libraries(types_sim3 PUBLIC types_sba)
 
 install(TARGETS types_sim3
--- origsrc/g2o-20200410_git/g2o/types/slam2d/CMakeLists.txt	2020-04-10 20:43:21.000000000 +0900
+++ src/g2o-20200410_git/g2o/types/slam2d/CMakeLists.txt	2020-07-08 10:11:48.890759700 +0900
@@ -21,6 +21,11 @@ set_target_properties(types_slam2d PROPE
 if (APPLE)
   set_target_properties(types_slam2d PROPERTIES INSTALL_NAME_DIR "${CMAKE_INSTALL_PREFIX}/lib")
 endif()
+
+if (CYGWIN)
+  set_target_properties(types_slam2d PROPERTIES SOVERSION 0)
+endif()
+
 target_link_libraries(types_slam2d core)
 if(G2O_HAVE_OPENGL)
   target_link_libraries(types_slam2d opengl_helper ${OPENGL_gl_LIBRARY} )
--- origsrc/g2o-20200410_git/g2o/types/slam2d_addons/CMakeLists.txt	2020-04-10 20:43:21.000000000 +0900
+++ src/g2o-20200410_git/g2o/types/slam2d_addons/CMakeLists.txt	2020-07-08 10:12:13.448633700 +0900
@@ -16,6 +16,11 @@ set_target_properties(types_slam2d_addon
 if (APPLE)
   set_target_properties(types_slam2d_addons PROPERTIES INSTALL_NAME_DIR "${CMAKE_INSTALL_PREFIX}/lib")
 endif()
+
+if (CYGWIN)
+  set_target_properties(types_slam2d_addons PROPERTIES SOVERSION 0)
+endif()
+
 target_link_libraries(types_slam2d_addons types_slam2d core)
 if(G2O_HAVE_OPENGL)
   target_link_libraries(types_slam2d_addons ${OPENGL_gl_LIBRARY})
--- origsrc/g2o-20200410_git/g2o/types/slam3d/CMakeLists.txt	2020-04-10 20:43:21.000000000 +0900
+++ src/g2o-20200410_git/g2o/types/slam3d/CMakeLists.txt	2020-07-08 10:12:35.861775600 +0900
@@ -44,6 +44,11 @@ set_target_properties(types_slam3d PROPE
 if (APPLE)
   set_target_properties(types_slam3d PROPERTIES INSTALL_NAME_DIR "${CMAKE_INSTALL_PREFIX}/lib")
 endif()
+
+if (CYGWIN)
+  set_target_properties(types_slam3d PROPERTIES SOVERSION 0)
+endif()
+
 target_link_libraries(types_slam3d core)
 if(G2O_HAVE_OPENGL)
   target_link_libraries(types_slam3d opengl_helper ${OPENGL_gl_LIBRARY} )
--- origsrc/g2o-20200410_git/g2o/types/slam3d_addons/CMakeLists.txt	2020-04-10 20:43:21.000000000 +0900
+++ src/g2o-20200410_git/g2o/types/slam3d_addons/CMakeLists.txt	2020-07-08 10:12:55.503504200 +0900
@@ -21,6 +21,11 @@ set_target_properties(types_slam3d_addon
 if (APPLE)
   set_target_properties(types_slam3d_addons PROPERTIES INSTALL_NAME_DIR "${CMAKE_INSTALL_PREFIX}/lib")
 endif()
+
+if (CYGWIN)
+  set_target_properties(types_slam3d_addons PROPERTIES SOVERSION 0)
+endif()
+
 target_link_libraries(types_slam3d_addons types_slam3d core)
 if(G2O_HAVE_OPENGL)
   target_link_libraries(types_slam3d_addons ${OPENGL_gl_LIBRARY} )
--- origsrc/g2o-20200410_git/unit_test/CMakeLists.txt	2020-04-10 20:43:21.000000000 +0900
+++ src/g2o-20200410_git/unit_test/CMakeLists.txt	2020-07-08 12:15:57.978847600 +0900
@@ -1,38 +1,46 @@
 # download and compile gtest library
 # Download and unpack googletest at configure time
-configure_file(gtest/CMakeLists.txt.in ${CMAKE_BINARY_DIR}/googletest-download/CMakeLists.txt)
-execute_process(COMMAND ${CMAKE_COMMAND} -G "${CMAKE_GENERATOR}" .
-  RESULT_VARIABLE result
-  WORKING_DIRECTORY ${CMAKE_BINARY_DIR}/googletest-download )
-if(result)
-  message(FATAL_ERROR "CMake step for googletest failed: ${result}")
-endif()
-execute_process(COMMAND ${CMAKE_COMMAND} --build .
-  RESULT_VARIABLE result
-  WORKING_DIRECTORY ${CMAKE_BINARY_DIR}/googletest-download )
-if(result)
-  message(FATAL_ERROR "Build step for googletest failed: ${result}")
+option(USE_SYSTEM_GTEST "Use system gtest" ON)
+if (NOT USE_SYSTEM_GTEST)
+  configure_file(gtest/CMakeLists.txt.in ${CMAKE_BINARY_DIR}/googletest-download/CMakeLists.txt)
+  execute_process(COMMAND ${CMAKE_COMMAND} -G "${CMAKE_GENERATOR}" .
+    RESULT_VARIABLE result
+    WORKING_DIRECTORY ${CMAKE_BINARY_DIR}/googletest-download )
+  if(result)
+    message(FATAL_ERROR "CMake step for googletest failed: ${result}")
+  endif()
+  execute_process(COMMAND ${CMAKE_COMMAND} --build .
+    RESULT_VARIABLE result
+    WORKING_DIRECTORY ${CMAKE_BINARY_DIR}/googletest-download )
+  if(result)
+    message(FATAL_ERROR "Build step for googletest failed: ${result}")
+  endif()
 endif()
 
 # Prevent overriding the parent project's compiler/linker
 # settings on Windows
 set(gtest_force_shared_crt ON CACHE BOOL "" FORCE)
 
-# Add googletest directly to our build. This defines
-# the gtest and gtest_main targets.
-add_subdirectory(${CMAKE_BINARY_DIR}/googletest-src
-                 ${CMAKE_BINARY_DIR}/googletest-build
-                 EXCLUDE_FROM_ALL)
+if (NOT USE_SYSTEM_GTEST)
+  # Add googletest directly to our build. This defines
+  # the gtest and gtest_main targets.
+  add_subdirectory(${CMAKE_BINARY_DIR}/googletest-src
+                  ${CMAKE_BINARY_DIR}/googletest-build
+                  EXCLUDE_FROM_ALL)
 
-# The gtest/gtest_main targets carry header search path
-# dependencies automatically when using CMake 2.8.11 or
-# later. Otherwise we have to add them here ourselves.
-if (CMAKE_VERSION VERSION_LESS 2.8.11)
-  include_directories("${gtest_SOURCE_DIR}/include")
+  # The gtest/gtest_main targets carry header search path
+  # dependencies automatically when using CMake 2.8.11 or
+  # later. Otherwise we have to add them here ourselves.
+  if (CMAKE_VERSION VERSION_LESS 2.8.11)
+    include_directories("${gtest_SOURCE_DIR}/include")
+  endif()
 endif()
 
 macro(create_test target)
   target_link_libraries(${target} gtest_main)
+  if (USE_SYSTEM_GTEST)
+    target_link_libraries(${target} gtest)
+  endif()
   add_test (NAME ${target} COMMAND $<TARGET_FILE:${target}>)
 endmacro(create_test)
 
