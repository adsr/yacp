--- origsrc/bifrost-1.0.4/CMakeLists.txt	2020-06-04 07:36:05.000000000 +0900
+++ src/bifrost-1.0.4/CMakeLists.txt	2020-07-23 10:58:41.803915700 +0900
@@ -53,3 +53,10 @@ MATH(EXPR PRINT_MAX_KMER_SIZE "${MAX_KME
 message("Maximum k-mer size: " ${PRINT_MAX_KMER_SIZE})
 
 add_subdirectory(src)
+
+SET(prefix ${CMAKE_INSTALL_PREFIX})
+SET(exec_prefix ${CMAKE_INSTALL_PREFIX})
+SET(libdir ${CMAKE_INSTALL_PREFIX}/lib)
+SET(includedir ${CMAKE_INSTALL_PREFIX}/include)
+CONFIGURE_FILE(${CMAKE_SOURCE_DIR}/bifrost.pc.in ${CMAKE_BINARY_DIR}/bifrost.pc @ONLY)
+INSTALL(FILES ${CMAKE_BINARY_DIR}/bifrost.pc DESTINATION ${CMAKE_INSTALL_PREFIX}/lib/pkgconfig)
--- origsrc/bifrost-1.0.4/bifrost.pc.in	1970-01-01 09:00:00.000000000 +0900
+++ src/bifrost-1.0.4/bifrost.pc.in	2020-07-23 11:16:35.187125800 +0900
@@ -0,0 +1,10 @@
+prefix=@prefix@
+exec_prefix=@exec_prefix@
+libdir=@libdir@
+includedir=@includedir@
+
+Name: bifrost
+Description: Highly parallel construction and indexing of colored and compacted de Bruijn graphs
+Version: @VERSION@
+Libs: -L${libdir} -lbifrost
+Cflags: -I${includedir}
--- origsrc/bifrost-1.0.4/src/CMakeLists.txt	2020-06-04 07:36:05.000000000 +0900
+++ src/bifrost-1.0.4/src/CMakeLists.txt	2020-07-23 11:16:29.731767600 +0900
@@ -1,28 +1,49 @@
 file(GLOB sources *.cpp roaring.c)
 file(GLOB headers *.h *.hpp *.hh *.tcc)
 
-list(REMOVE_ITEM sources Bifrost.cpp)
+list(REMOVE_ITEM sources ${CMAKE_CURRENT_SOURCE_DIR}/Bifrost.cpp)
 
-add_definitions(-DMAX_KMER_SIZE=${MAX_KMER_SIZE})
-
-add_library(bifrost_static STATIC ${sources} ${headers})
-add_library(bifrost_dynamic SHARED ${sources} ${headers})
-
-set_target_properties(bifrost_static PROPERTIES OUTPUT_NAME "bifrost")
-set_target_properties(bifrost_dynamic PROPERTIES OUTPUT_NAME "bifrost")
+include(FindPkgConfig)
+pkg_check_modules(CROARING croaring)
+if (CROARING_FOUND)
+    list(REMOVE_ITEM sources ${CMAKE_CURRENT_SOURCE_DIR}/roaring.c)
+    list(REMOVE_ITEM headers ${CMAKE_CURRENT_SOURCE_DIR}/roaring.h ${CMAKE_CURRENT_SOURCE_DIR}/roaring.hh)
+endif()
+pkg_check_modules(XXHASH libxxhash)
+if (XXHASH_FOUND)
+    list(REMOVE_ITEM sources ${CMAKE_CURRENT_SOURCE_DIR}/xxhash.c)
+    list(REMOVE_ITEM headers ${CMAKE_CURRENT_SOURCE_DIR}/xxhash.h)
+endif()
 
-target_include_directories(bifrost_static PUBLIC ${CMAKE_CURRENT_SOURCE_DIR})
-target_include_directories(bifrost_dynamic PUBLIC ${CMAKE_CURRENT_SOURCE_DIR})
+add_definitions(-DMAX_KMER_SIZE=${MAX_KMER_SIZE})
 
 add_executable(Bifrost Bifrost.cpp)
 
 find_package(Threads REQUIRED)
-target_link_libraries(bifrost_static ${CMAKE_THREAD_LIBS_INIT})
-target_link_libraries(bifrost_dynamic ${CMAKE_THREAD_LIBS_INIT})
-
 find_package(ZLIB REQUIRED)
-target_link_libraries(bifrost_static ${ZLIB_LIBRARIES})
-target_link_libraries(bifrost_dynamic ${ZLIB_LIBRARIES})
+
+if (BUILD_SHARED_LIBS)
+    add_library(bifrost_dynamic SHARED ${sources} ${headers})
+    set_target_properties(bifrost_dynamic PROPERTIES OUTPUT_NAME "bifrost")
+    target_include_directories(bifrost_dynamic PUBLIC ${CMAKE_CURRENT_SOURCE_DIR})
+    target_link_libraries(bifrost_dynamic ${CMAKE_THREAD_LIBS_INIT})
+    target_link_libraries(bifrost_dynamic ${ZLIB_LIBRARIES})
+    if (CROARING_FOUND)
+        target_link_libraries(bifrost_dynamic ${CROARING_LIBRARIES})
+    endif()
+    if (XXHASH_FOUND)
+        target_link_libraries(bifrost_dynamic ${XXHASH_LIBRARIES})
+    endif()
+    if (CYGWIN)
+        set_target_properties(bifrost_dynamic PROPERTIES SOVERSION 0)
+    endif()
+else()
+    add_library(bifrost_static STATIC ${sources} ${headers})
+    set_target_properties(bifrost_static PROPERTIES OUTPUT_NAME "bifrost")
+    target_include_directories(bifrost_static PUBLIC ${CMAKE_CURRENT_SOURCE_DIR})
+    target_link_libraries(bifrost_static ${CMAKE_THREAD_LIBS_INIT})
+    target_link_libraries(bifrost_static ${ZLIB_LIBRARIES})
+endif()
 
 if (ZLIB_FOUND)
     include_directories(${ZLIB_INCLUDE_DIRS})
@@ -30,10 +51,19 @@ else()
     message(FATAL_ERROR "zlib not found. Required for to output files")
 endif(ZLIB_FOUND)
 
-target_link_libraries(Bifrost bifrost_dynamic)
+if (BUILD_SHARED_LIBS)
+    target_link_libraries(Bifrost bifrost_dynamic)
+else()
+    target_link_libraries(Bifrost bifrost_static)
+endif()
 
 install(TARGETS Bifrost DESTINATION bin)
-install(TARGETS bifrost_dynamic DESTINATION lib)
-install(TARGETS bifrost_static DESTINATION lib)
+if (BUILD_SHARED_LIBS)
+    install(TARGETS bifrost_dynamic RUNTIME DESTINATION bin ARCHIVE DESTINATION lib)
+else()
+    install(TARGETS bifrost_static DESTINATION lib)
+endif()
 install(FILES ${headers} DESTINATION include/bifrost)
-install(FILES xxhash.c DESTINATION include/bifrost)
+if (NOT XXHASH_FOUND)
+    install(FILES xxhash.c DESTINATION include/bifrost)
+endif()
